package Exploit;


import API.Generable;

import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class Exploitation implements Generable{

    //on renseigne le driver
    private String nomDriverJDBCDuSGBD = "com.mysql.cj.jdbc.Driver";

    //on renseigne les paramètres pour se connecter à la base de données
    private String urlBD = "jdbc:mysql://localhost:3306/Test_java_jdbc";
    private String user = "root";
    private String psswd = "basededonneemdp";



    @Override
    public void Migration() {

        //on récupere le script sur un fichier text externe
        String line = "";
        BufferedReader bufferedReader = null;
        File file = new File("script_tables.txt");
        try {
            FileReader filereader = new FileReader(file);
            bufferedReader = new BufferedReader(filereader);


            while((line = bufferedReader.readLine()) != null ){

            }

        } catch (FileNotFoundException e) {
            System.out.println("fichier introuvable");
        }catch (IOException e){
            System.out.println("fichier non lus");

        }

        System.out.println(line);
        //on ferme le fichier
        try {
            bufferedReader.close();
        } catch (IOException e) {
            System.out.println("impossible de fermer le fichier");
        } catch (NullPointerException e){
            System.out.println("impossible d'ouvrir le fichier");
        }

        //on charge le driver
        try {
            Class.forName(nomDriverJDBCDuSGBD);
            System.out.println("chargement du driver jdbc avec succés !");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            System.exit(-1);
        }

        //on ouvre une connexion à notre base de donnée
        try (java.sql.Connection con = DriverManager.getConnection(urlBD, user, psswd)) {

            System.out.println("connexion ouverte");

            //on lance la migration initial pour créer nos tables
            PreparedStatement pst = con.prepareStatement("");

        }catch(SQLException e){

            System.out.println(e);
            System.exit(-1);
        }
    }

    @Override
    public void Dispo_enseignant() {

    }

    @Override
    public void Dispo_salle() {

    }


    @Override
    public void Heures_cours() {

    }

    @Override
    public void Ajout_heure_cours() {

    }

    @Override
    public void ajout_heure_salle() {

    }


}
